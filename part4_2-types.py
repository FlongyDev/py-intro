""" ================================= """
""" Типы данных, Ч2: list, tuple, str """
""" ================================= """

""" Списки - list """
# l = [1, 2, 3, 4]
# print(l)      # print также работает со списками!

# n = int(input())  # Перевод пользовательского ввода (строки) в целое число
# l = [0] * n       # Коллекции можно повторять несколько раз
# print(l)

# l = [1, 2]
# print(l)
# l.append(3)       # Списки - изменяемые. Поэтому можно в них добавлять новые элементы через list.append(value)
# print(l)
# a = l.pop()       # А также удалять из списка методом list.pop([index])
# print(l, a)

# numbers = [10, 20, 30]
# print(numbers[0], numbers[1], numbers[-1])    # Индексация в коллекциях

# l = [1, 2, 3, 4, 5]
# print(len(l))         # Определение количества элементов в коллекции

# nums1 = [10, 20, 30, 40]
# nums2 = nums1         # Сложные типы копируются по ссылке!
# nums2.append(15)      # Обе переменные указывают на один список => в обе добавляется 15
# print(nums1)
# print(nums2)

# nums1 = [10, 20, 30, 40]
# # nums2 = nums1.copy()    # Копия списка через метод
# nums2 = nums1[-2:]        # Копия списка через слайсинг [:]
# nums2.append(15)          # Добавление уже в копию первого списка
# print(nums1)
# print(nums2)

""" Кортежи - tuple """
# tup1 = tuple([1, 2, 3,])
# print(type(tup1))

""" Динамическая типизация дает хранить в коллекциях разнотипные данные, даже коллекции внутри других коллекций """
# tup = "Flongy", 42        # Определять кортеж можно без скобок - просто через запятую
# print(tup, type(tup))
#
# name, number = tup        # Распаковка кортежа по переменным
# print(name)
# print(number)

""" Строки - str """
# st1 = "Hello, world!"
# temp = st1.split()    # Метод разделяющий строку по пробельным символам
# print(temp)
# print(st1)
# st2 = st1.strip()     # Метод удаления всех пробелов в начале и конце строки
# print(st2)
# print(st1.lower())    # Метод перевода в нижний регистр всех букв в строке

strings = ["One", "Two", "Three"]

joined = "...".join(strings)    # Объединение списка строк в одну через заданный разделитель
print(joined)
